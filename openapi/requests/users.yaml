tags:
  name: User

paths:
  /plate:
    post:
      tags:
      - User
      summary: Create New User
      parameters:
      - name: body
        in: body
        description: Body structure of plate
        required: true
        schema:
          $ref: '#/definitions/UserBodyParameter'
      responses:
        201:
          description: 'Created'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/definitions/UserDto'
                  _message:
                    type: string
                    example: "created"
        400:
          description: 'Bad Request'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        500:
          description: 'Server Error'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'

    get:
      tags:
      - User
      summary: Get All Users
      responses:
        200:
          description: 'OK'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      $ref: '#/definitions/AllItemsDto'
                  _message:
                    type: string
                    example: "getAll"
        500:
          description: 'Server Error'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
  
  /plate/{id}:
    get:
      tags:
      - User
      summary: Get User By Id
      parameters:
      - name: id
        in: path
        description: User Id in UUID v4 format
        required: true
        type: string
      responses:
        200:
          description: 'OK'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/definitions/UserDto'
                  _message:
                    type: string
                    example: "getOne"
        400:
          description: 'Bad Request'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        404:
          description: 'Not Found'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        500:
          description: 'Server Error'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'

    put:
      tags:
      - User
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: User Id in UUID v4 format
        required: true
        type: string
      - name: body
        in: body
        description: User Data
        required: true
        schema:
          $ref: '#/definitions/UserBodyParameter'
      responses:
        200:
          description: 'OK'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/definitions/UserDto'
                  _message:
                    type: string
                    example: "updated"
        400:
          description: 'Bad Request'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        404:
          description: 'Not Found'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        500:
          description: 'Server Error'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'

    delete:
      tags:
      - User
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: User Id in UUID v4 format
        required: true
        type: string
      responses:
        204:
          description: 'No Content'
        404:
          description: 'Not Found'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'
        500:
          description: 'Server Error'
          content:
            'application/json':
              schema:
                $ref: '#/definitions/ErrorModel'

# definitions
definitions:
  UserBodyParameter:
    type: object
    properties:
      plateName:
        type: string
        description: User name
  
  UserDto:
    type: object
    properties:
      id:
        type: string
        description:
      createdAt:
        type: integer
        description: date record was created in milliseconds since epoch
      updatedAt:
        type: integer
        description: date record was last modified in milliseconds since epoch
      userName:
        type: string
        description: 
  
  AllItemsDto:
    type: object
    properties:
      id:
        type: string
        description: User ID in UUID v4 format
      name:
        type: string
        description: User name
  
  ErrorModel:
    type: object
    properties:
      name:
        type: string
      message:
        type: string

schemes:
 - https
 - http
